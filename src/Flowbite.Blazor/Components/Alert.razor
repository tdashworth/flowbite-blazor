@using Utilities
@inherits BaseComponent

@if (Visible) {
	<div @attributes="UserAttributes" class="@ClassNames" style="@Style" role="alert">
		@if (ShowIcon)
		{
			<Flowbite.Blazor.Icons.Info Class="inline flex-shrink-0 mr-3 w-5 h-5" />
			<span class="sr-only">Info</span>
		}
		<div>
			@ChildContent
		</div>
		@if (Dismissable)
		{
			<button type="button" class="@CloseClassNames" aria-label="Close" @onclick="() => Visible = false">
				<span class="sr-only">Close</span>
				<Flowbite.Blazor.Icons.Close />
			</button>
		}
	</div>
}

@code {
	[Parameter]
	public bool ShowIcon { get; set; }

	[Parameter]
	public RenderFragment? ChildContent { get; set; }

	[Parameter]
	public bool Rounded { get; set; }

	[Parameter]
	public bool Dismissable { get; set; }

	[Parameter]
	public FlowbiteColors Color { get; set; } = FlowbiteColors.Blue;

	public bool Visible { get; set; } = true;

	protected string ClassNames =>
	new CssBuilder("flex p-4 mb-4 text-sm")
	.AddClass("text-blue-700 bg-blue-100 dark:bg-blue-200 dark:text-blue-800", Color is FlowbiteColors.Blue)
	.AddClass("rounded-lg", Rounded)
	.AddClass(Class)
	.Build();

	protected string CloseClassNames => 
	new CssBuilder("ml-auto -mx-1.5 -my-1.5 rounded-lg focus:ring-2 p-1.5 inline-flex h-8 w-8")
	.AddClass("bg-blue-100 text-blue-500 focus:ring-blue-400 hover:bg-blue-200 dark:bg-blue-200 dark:text-blue-600 dark:hover:bg-blue-300", Color is FlowbiteColors.Blue)
	.Build();
}